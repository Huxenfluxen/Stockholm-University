
  Laboration2


        2022-10-19

Uppgift 1

 1.

    Eftersom intervallet delas upp i k lika delar så blir första
    respektive sista delintervallen;
    I1=[a,bk],Ik=[k−1k,1]I1=[a,bk],Ik=[k−1k,1].

 2.

    Längden på varje delintervall blir $ 1 - (1 - ) = $

 3.

    Låt P(Xi)P(Xi) beteckna sannolikheten av att ett slumptal hamnar i
    det i:e intervallet. Då är sannolikheten, eftersom att det är en
    likformig Bernoullifördelning, för P(X1)=1kP(X1)=1k. Alltså blir
    sannolikheten att det inte hamnar i det första intervallet;
    P(Xc1)=1−1k=k−1kP(X1c)=1−1k=k−1k. Dessa är också parametrarna i
    fördelningen, i.e. p=1k,q=1−p=k−1kp=1k,q=1−p=k−1k.

 4.

    För $j \subset \mathbb{N},,, P(x_1 = j) = $
    (nj)(nj)⋅pj⋅(1−p)n−j⋅pj⋅(1−p)n−j Vilket följer binomialfördelningen
    med parameter p=1kp=1k.

 5.

    Ja, antalet slumptal i de andra delintervallen har samma
    sannolikhetsfördelning som X1X1, men de är inte oberoende eftersom
    att antalet dragna slumptal är givet, därför ändras sannolikheten
    för hur många som hamnar i önskat intervall beroende på hur många
    som hamnat i andra intervall. Alltså; P(Xl|Xm)≠P(Xl)P(Xl|Xm)≠P(Xl)
    för l och m mellan 1 och k.

 6.

    Y1=X1n⟹E[Y1]=E[X1n]=1nE[X1]=1n(np)=p=1k&V(Y1)=V(X1n)=1n2V(X1)=1n2q(np)=pqn=p−p2n=1k(1−1k)n=k−1k2n⟹D(Y1)=k−1k2n−−−√Y1=X1n⟹E[Y1]=E[X1n]=1nE[X1]=1n(np)=p=1k&V(Y1)=V(X1n)=1n2V(X1)=1n2q(np)=pqn=p−p2n=1k(1−1k)n=k−1k2n⟹D(Y1)=k−1k2n

För att visualisera detta kan man börja med att generera slumptal med
hjälp av att så ett så kallat “frö”, och därefter plotta ett histogram
över slumptalen. Histogrammet delas in i tio lika stora delintervall och
visar hur många av de genererade slumptalen som hamnat i respektive
intervall (stapel).

|set.seed(19930610)
slumptal <- runif(100) 

hist(slumptal,
     breaks = seq(from = 0, to = 1, length.out = 10 + 1),
     main = "",
     ylab = "Antal",
     xlab = "Värde")|

|seq(from = 0, to = 1, length.out = 10 + 1)|

|##  [1] 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0|

För att undersöka om andelarna förhåller sig inom ramen av felmarginalen
på 2 till 3 standardavvikelser från väntevärdet, så kan detta histogram
vara behjälpligt:

|# x: vektor med slumptal (eller annan data)
prop_hist <- function(x, xlab = "Värde") {
p <- hist(x, plot = FALSE)
p$counts <- p$counts / sum(p$counts) # Konvertera antal till andelar
plot(p,
main = "Andelshistogram 1",
ylab = "Andel",
xlab = xlab)
}|

|prop_hist(slumptal)|

Standardavvikelsen för n=100n=100 när intervallet är uppdelat i 10
(väntevärde 1/101/10) blir; 10−1102∗100−−−−−√=10−1102∗100= 0.03. Med den
informationen kan ännu ett histogram plottas, där även ±± 2 gånger
standardavvikelsen ifrån väntevärdet tas med för att lätt se om
andelarna faller utanför intervallet.

|E <- 0.1
D <- 0.03
prop_hist(slumptal)
abline(a = E, b = 0, col = "grey") # Väntevärdet
abline(a = E + 2 * D, b = 0, col = "red") # Väntevärdet + 2 standardavvikelser
abline(a = E - 2 * D, b = 0, col = "red") # Väntevärdet - 2 standardavvikelser|

För att jämföra mellan olika storlekar på n, så kan exempelvis 10 och
10000 vara lämpliga jämförelser för att se avvikelser/skillnader de emellan:

För n=10;σ=n=10;σ= 10−1102∗10−−−−−√=10−1102∗10= 0.0948683

För n=10000;σ=n=10000;σ= 10−1102∗104−−−−−√=10−1102∗104= 0.003

Så histogrammen för n=10n=10 och n=10000n=10000 blir då, respektive:

|set.seed(19930610)
E <- 0.1
D <- 0.0948683
prop_hist(runif(10))
abline(a = E, b = 0, col = "grey") # Väntevärdet
abline(a = E + 2 * D, b = 0, col = "red") # Väntevärdet + 2 standardavvikelser
abline(a = E - 2 * D, b = 0, col = "red") # Väntevärdet - 2 standardavvikelser|

|set.seed(19930610)
E <- 0.1
D <- 0.003
prop_hist(runif(10000))
abline(a = E, b = 0, col = "grey") # Väntevärdet
abline(a = E + 2 * D, b = 0, col = "red") # Väntevärdet + 2 standardavvikelser
abline(a = E - 2 * D, b = 0, col = "red") # Väntevärdet - 2 standardavvikelser|

Som man kan se så verkar fördelningen bli jämnare och jämnare ju högre
antal genererade slumptal en använder sig av, och går mer mot en
likformig fördelning. Så för ett givet väldigt stort n, ser det ut som
en likformig fördelning, som väntat. Med andra ord, en kan även se att
avvikelserna blir mindre och mindre desto större n, vilket även den
beräknade standardavvikelsen förutspådde. Summa summarum får
slumptalsgeneratorn i R godkänt. # Uppgift 2

Här plottas två för normalfördelningen, med medelvärde/väntevärde 12 och
en varians på 1.221.22 alltså standardavvikelse på 1.2, kurvor där den
ena är tänkt att ha 85 observationer av något objekt medan den andra har
1500 observationer. Skillnaden de emellan, samt vad som utmärker de för
att vara just normalfördelade diskuteras.

|set.seed(19930610) 
par(mfrow = c(1, 2))
prop_hist(rnorm(85, mean = 12, sd = 1.1)) # n = 85
prop_hist(rnorm(1500, mean = 12, sd = 1.1)) # n = 1500|

Dessa två histogram, som ju ska vara normalfördelade, ser också
normalfördelade ut, eftersom de båda håller sig symmetriskt kring
medelvärdet/väntevärdet och har samma omega-formade struktur på
funktionen som normalfördelningskurvan, täthetsfunktionen. Ju fler
observationer desto mer komprimeras kurvan in runt väntevärdet, i x-led,
vilket är typiskt för normalfördelningen, medan man kan se att få
observationer ger ett mer osäkert unnderlag för hur den normala
fördelningen ser ut.

Här jämförs två expontialfördelningar med intensitet på 3 vardera.

|set.seed(19930610)
par(mfrow = c(1, 2))
prop_hist(rexp(85, rate = 3)) # väntevärde 1/3
prop_hist(rexp(1500, rate = 3)) # väntevärde 1/3|

Här kan observeras att histogrammen tenderar mot
exponentialfördelningens täthetsfunktion mer och mer jämnt desto större
y (mer tid eller vad man nu använder sig av) som anges.


  Uppgift 3

X exponentialfördelad med väntevärde 1/2, och V=1−exp(−2X)V=1−exp(−2X):

|set.seed(19930610)
x <- rexp(500, rate = 2)
v <- 1 - exp(-2 * x)
# Plotta x och v bredvid varandra
par(mfrow = c(1, 2))
prop_hist(x, xlab = "X")
prop_hist(v, xlab = "V")|

X-plotten tenderar mot en kontinuerlig exponentialfunktion för större n,
likt exemplen ovan. Bokens påstående verkar också stämma, eftersom vid
större n ser v-plotten ut att bli mer och mer lik en likformig
fördelning i intervallet [0,1].

